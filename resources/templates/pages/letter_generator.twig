{% extends "page.twig" %}
{% import "form_fields.twig" as field %}
{% block content %}
<div class="row">
	<div class="col-xs-12 col-md-6 col-md-offset-3">
		<form class="bs-form" 
				action="letter.php" 
				method="POST" 
				autocomplete="on">
			{{ 
				field.select({
								name: "form_type", 
								required: true, 
								values: [
										"request_for_validation",
										"HIPPA_violation",
										"intent_to_file_lawsuit",
										"section_609_verification"
										]
							}) 
			}}
			<div class="field-group">
				<h3>Your Info</h3>
				{{ field.contact_info({user:current_user, include_county: true}) }}
				{{ field.text({name:"date_of_birth", type:"date"}) }}
				{{ field.text({name:"social_security_number", required:false}) }}
				{{ field.text({name:"account_number"}) }}
				<span id="accounts-in-question_field" class="display-none">
					{{ 
						field.select({
							name: "number_of_accounts_in_question",
							values: ["1","2","3","4","5","6","7","8","9",]
						}) 
					}}
				</span>
			</div>
			<div class="field-group" id="creditor_fields">
				<h3>Collection Agency Info</h3>
				{{ field.contact_info({name:"collection_agency"}) }}
			</div>
			<div class="field-group display-none" id="bureau_fields">
				<h3>Credit Bureau Info</h3>
				{{ 
					field.select({
						name: "bureau", 
						required: true, 
						values: ["equifax", "experion", "trans_union", "custom"]
					}) 
				}}
				<span id="custom_creditor_fields">
					{{ field.contact_info({name:"bureau"}) }}
				</span>
			</div>
			<input type="hidden" name="action" id="action-field"/>
			<button type="button" class="btn btn-primary submit-btn" id="email-btn">
				Generate Letter
			</button>
			{% if current_user.role == 1 %}
				<button type="button" class="btn btn-primary submit-btn" id="download-btn">
					Download Letter
				</button>
			{% endif %}
		</form>
		<div id="progress-bar-container" class="hidden">
			<div class="progress">
				<div 	class="progress-bar progress-bar-info" 
						role="progressbar" 
						aria-valuenow="0" 
						aria-valuemin="0" 
						aria-valuemax="100" 
						style="width: 0%">
			    	0%
				</div>
			</div>
			<div id="progress-message"></div>
		</div>
	</div>
</div>
<script>
	$(() => {
		$("#form_type").change(() => {
			var formName = $("#form_type").val();
			switch (formName){
				case "request_for_validation":
					$("#social_security_number").parent().removeClass("display-none");
					$("#creditor_fields").removeClass("display-none").find(".required").attr("required", "true");
					$("#bureau_fields").addClass("display-none").find(".required").removeAttr("required");
					$("#accounts-in-question_field").addClass("display-none");
					break;
				case "HIPPA_violation":
					$("#social_security_number").parent().addClass("display-none");
					$("#creditor_fields").add("#bureau_fields")
						.removeClass("display-none")
						.find(".required").attr("required", "true");
					$("#accounts-in-question_field").addClass("display-none");
					break;
				case "intent_to_file_lawsuit":
					$("#social_security_number").parent().addClass("display-none");
					$("#creditor_fields").add("#bureau_fields")
						.removeClass("display-none")
						.find(".required").attr("required", "true");
					$("#accounts-in-question_field").addClass("display-none");
					break;
				case "section_609_verification":
					$("#social_security_number").parent().remove("display-none");
					$("#creditor_fields").addClass("display-none").find(".required").removeAttr("required");
					$("#bureau_fields").removeClass("display-none").find(".required").attr("required", "true");
					$("#accounts-in-question_field").removeClass("display-none");
					break;
			}
		});
		$("#form_type").change();//Trigger the change event to set all the required fields properly

		$("#bureau").change(() => {
			var bureau = $("#bureau").val();
			if (bureau === "custom"){
				$("#custom_creditor_fields").find("input, select").val("");
				/*
				$("#custom_creditor_fields").children().hide();
				$("#custom_creditor_fields").slideDown({
					complete: () => {
						$("#custom_creditor_fields").children().fadeIn();
					}
				});
				*/
			}
			else{
				var bureau_info;
				switch (bureau){
					case "equifax":
						bureau_info = [
							"Equifax Information Services LLC",
							"P.O. Box 740256",
							"Atlanta",
							"GA",
							"30374"
						];
						break;
					case "experion":
						bureau_info = [
							"Experian",
							"P.O. Box 4500",
							"Allen",
							"TX",
							"75013"
						];
						break;
					case "trans_union":
						bureau_info = [
							"TransUnion LLC -- Consumer Dispute Center",
							"P.O. Box 2000",
							"Chester",
							"PA",
							"19022"
						];
						break;
				}
				$("#custom_creditor_fields").find("input, select").each((i, element) => {
					$(element).val(bureau_info[i]);
				})
				/*
				$("#custom_creditor_fields").children().fadeOut({
					complete: () => {
						$("#custom_creditor_fields").slideUp();
					}
				});
				*/
			}
		});
		$("#bureau").change();
		$(".submit-btn").click(function() {
			if ($(this).attr("id") === "download-btn"){
				$("#action-field").val("download");
				$("form").attr("target", "_blank");
				$("form").submit();
				return;
			}
			else{
				$("#action-field").val("email");
				$("form").removeAttr('target');
			}
			//Trigger animation
			$("#progress-bar-container").removeClass("hidden");
			var getRandomTime = function(){
				return Math.round(Math.random() * 4000 + 1000);
			}
			var keyframes = [
				{time:0, message: "Contacting Equifax...", progress: 10},
				{time:getRandomTime(), message: "Verifying...", progress: 22},
				{time:getRandomTime(), message: "Contacting Experion...", progress: 34},
				{time:getRandomTime(), message: "Verifying...", progress: 46},
				{time:getRandomTime(), message: "Contacting TransUnion...", progress: 58},
				{time:getRandomTime(), message: "Verifying...", progress: 70},
				{time:getRandomTime(), message: "Generatint Letter...", progress: 82},
				{time:getRandomTime(), message: "Finishing...", progress: 99},
				{time:getRandomTime(), done: true},
			];
			//Add random "busy" frames
			for (var i = keyframes.length - 4 ; i >= 0 ; i--){
				if (Math.random() < .2){
					keyframes.splice(i, 0, {
						time:getRandomTime(),
						message: "Busy...",
						progress: false
					});
				}
			}

			var animate = function(index){
				var frame = keyframes[index];
				if (frame.done){
					//$("#progress-bar-container").addClass("display-none");
					$("#progress-message").html("Complete");
					$(".progress-bar")
						.attr("aria-valuenow", 100)
						.css("width", "100%")
						.html("100%");
					$("form").submit();
					return;
				}
				if (frame.message)
					$("#progress-message").html(frame.message);
				if (frame.progress){
					$(".progress-bar")
						.attr("aria-valuenow", frame.progress)
						.css("width", frame.progress + "%")
						.html(frame.progress + "%");
				}
				/*
				if (index === 2)
					$(".progress-bar").removeClass('progress-bar-danger').addClass('progress-bar-warning');
				else if (index === 6)
					$(".progress-bar").removeClass('progress-bar-warning').addClass('progress-bar-success');
				*/
				setTimeout(()=>{animate(index+1);}, keyframes[index+1].time);
			}
			animate(0);
		})
	});
</script>
{% endblock %}